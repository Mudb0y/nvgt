/**
	Scales the box by multiplying both min and max directly with the given scale vector. This causes the box to scale relative to the origin (0,0,0), meaning both its size and position will change if it's not centered at the origin.
	void aabb::apply_scale(const vector&in scale);
	## Arguments:
		* scale: A vector containing the factors to scale by.
*/

// Example:
void main() {
	aabb b;
	b.min = vector(1, 3, 5);
	b.max = vector(3, 5, 7);
	b.apply_scale(vector(2, 2, 2));
	alert("The bottom left corner of the box is located at", round(b.min.x, 0)+", "+round(b.min.y, 0)+", "+round(b.min.z, 0)); // 2, 6, 10
	alert("The top right corner of the box is located at", round(b.max.x, 0)+", "+round(b.max.y, 0)+", "+round(b.max.z, 0)); // 6, 10, 14
}
